//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.MapSystem
{ 

public sealed partial class BlockConfig :  Bright.Config.BeanBase 
{
    public BlockConfig(JSONNode _json) 
    {
        { if(!_json["blockType"].IsNumber) { throw new SerializationException(); }  BlockType = (EBlockType)_json["blockType"].AsInt; }
        { if(!_json["generateRate"].IsNumber) { throw new SerializationException(); }  GenerateRate = _json["generateRate"]; }
        { var _json2 = _json["greennessRange"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } GreennessRange = new UnityEngine.Vector2(__x, __y); }
        { if(!_json["infectionData"].IsObject) { throw new SerializationException(); }  InfectionData = MapSystem.InfectionData.DeserializeInfectionData(_json["infectionData"]);  }
        { if(!_json["buildable"].IsBoolean) { throw new SerializationException(); }  Buildable = _json["buildable"]; }
        PostInit();
    }

    public BlockConfig(EBlockType blockType, float generateRate, UnityEngine.Vector2 greennessRange, MapSystem.InfectionData infectionData, bool buildable ) 
    {
        this.BlockType = blockType;
        this.GenerateRate = generateRate;
        this.GreennessRange = greennessRange;
        this.InfectionData = infectionData;
        this.Buildable = buildable;
        PostInit();
    }

    public static BlockConfig DeserializeBlockConfig(JSONNode _json)
    {
        return new MapSystem.BlockConfig(_json);
    }

    /// <summary>
    /// 地块种类
    /// </summary>
    public EBlockType BlockType { get; private set; }
    /// <summary>
    /// 生成比例
    /// </summary>
    public float GenerateRate { get; private set; }
    /// <summary>
    /// 绿化度范围
    /// </summary>
    public UnityEngine.Vector2 GreennessRange { get; private set; }
    /// <summary>
    /// 传播范围
    /// </summary>
    public MapSystem.InfectionData InfectionData { get; private set; }
    /// <summary>
    /// 可建筑
    /// </summary>
    public bool Buildable { get; private set; }

    public const int __ID__ = -114332884;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        InfectionData?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        InfectionData?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "BlockType:" + BlockType + ","
        + "GenerateRate:" + GenerateRate + ","
        + "GreennessRange:" + GreennessRange + ","
        + "InfectionData:" + InfectionData + ","
        + "Buildable:" + Buildable + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
