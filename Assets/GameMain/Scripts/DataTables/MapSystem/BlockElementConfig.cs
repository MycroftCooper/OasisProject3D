//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.MapSystem
{ 

public sealed partial class BlockElementConfig :  Bright.Config.BeanBase 
{
    public BlockElementConfig(JSONNode _json) 
    {
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["blockType"].IsNumber) { throw new SerializationException(); }  BlockType = (EBlockType)_json["blockType"].AsInt; }
        { if(!_json["generateRate"].IsNumber) { throw new SerializationException(); }  GenerateRate = _json["generateRate"]; }
        { if(!_json["numRange"].IsNumber) { throw new SerializationException(); }  NumRange = _json["numRange"]; }
        { var __json0 = _json["modelPath"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; ModelPath = new string[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  ModelPath[__index0++] = __v0; }   }
        { var __json0 = _json["materialPath"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; MaterialPath = new string[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  MaterialPath[__index0++] = __v0; }   }
        PostInit();
    }

    public BlockElementConfig(string name, EBlockType blockType, float generateRate, int numRange, string[] modelPath, string[] materialPath ) 
    {
        this.Name = name;
        this.BlockType = blockType;
        this.GenerateRate = generateRate;
        this.NumRange = numRange;
        this.ModelPath = modelPath;
        this.MaterialPath = materialPath;
        PostInit();
    }

    public static BlockElementConfig DeserializeBlockElementConfig(JSONNode _json)
    {
        return new MapSystem.BlockElementConfig(_json);
    }

    /// <summary>
    /// 元素名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 地块种类
    /// </summary>
    public EBlockType BlockType { get; private set; }
    /// <summary>
    /// 生成概率
    /// </summary>
    public float GenerateRate { get; private set; }
    /// <summary>
    /// 每地块数量范围
    /// </summary>
    public int NumRange { get; private set; }
    /// <summary>
    /// 模型路径
    /// </summary>
    public string[] ModelPath { get; private set; }
    /// <summary>
    /// 材质路径
    /// </summary>
    public string[] MaterialPath { get; private set; }

    public const int __ID__ = 1264361012;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Name:" + Name + ","
        + "BlockType:" + BlockType + ","
        + "GenerateRate:" + GenerateRate + ","
        + "NumRange:" + NumRange + ","
        + "ModelPath:" + Bright.Common.StringUtil.CollectionToString(ModelPath) + ","
        + "MaterialPath:" + Bright.Common.StringUtil.CollectionToString(MaterialPath) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
